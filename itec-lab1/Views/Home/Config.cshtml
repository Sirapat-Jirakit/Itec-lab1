@{  
    ViewData["Title"] = "Config";  
    var config = new string[] { "Officers", "Categories", "Products" };  
}  
<h3>Select Configuration</h3>  

@* <div class="dropdown">  
    <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">  
        Dropdown button  
    </button>  
    <ul class="dropdown-menu" id="categoryDropdown">
        @foreach (var type in config)
        {
            <li><a data-value="@type" class="dropdown-item">@type</a></li>
        }
    </ul>

    <div id="test">test</div>

    <table class="table table-bordered" id="configTable">
        <thead>
            <tr></tr>
        </thead>
        <tbody></tbody>
    </table>
</div> *@

<div class="btn-group dropdown-light btn-rtl">
    <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown"
            data-bs-auto-close="true" aria-expanded="false">
        Select Configuration <i class="ti ti-circle-arrow-down"></i>
    </button>
    <ul class="dropdown-menu" id="configDropdown">
        @foreach (var type in config)
        {
            <li><a class="dropdown-item" data-value="@type" >@type</a></li>
        }
    </ul>
</div>

<div class="app-datatable-default overflow-auto">
    <table class="display app-data-table default-data-table" id="configTable">
        <thead>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section Scripts {
    

    <!-- data table js-->
    <script src="../assets/js/data_table.js"></script>

    <script>

        $('#configDropdown').on('click', '.dropdown-item', function () {
            const selectedValue = $(this).data('value');
            $("#test").text(selectedValue);
            const path = '/Home/GetAll' + selectedValue

            $.ajax({
            url: path,
            type: 'GET',
            success: function (data) {

                if (data.length === 0) {
                    $('#configTable').DataTable({
                        destroy: true,
                        data: [],
                        columns: [{ title: "No data found", data: "No data found" }],
                        language: {
                            emptyTable: "No data found."
                        }
                    });
                    return;
                }

                const propertyNames = Object.keys(data[0]);

                const columns = propertyNames.map(function (prop) {
                    return { title: prop, data: prop };
                });

                if ($.fn.DataTable.isDataTable('#configTable')) {
                    $('#configTable').DataTable().clear().destroy();
                }

                $('#configTable').DataTable({
                    destroy: true,
                    data: data,
                    columns: columns
                });
            },
            error: function () {
                alert('Failed to fetch data.');
            }
        });
        });

    </script>
}